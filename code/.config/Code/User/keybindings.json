// Place your key bindings in this file to override the defaults
[
  // Open explorer 
  {
    "key": "shift+space",
    "command": "workbench.view.explorer",
    "when": "vim.mode == 'Normal' || vim.mode == 'Visual'"
  },
  {
    "key": "shift+space",
    "command": "-workbench.view.explorer",
    "when": "vim.mode == 'Normal' || vim.mode == 'Visual'"
  },
  {
    "key": "shift+space",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "explorerViewletVisible && sideBarFocus && vim.mode == 'Normal' || vim.mode == 'Visual'"
  },
  {
    "key": "shift+space",
    "command": "-workbench.action.toggleSidebarVisibility",
    "when": "explorerViewletVisible && vim.mode == 'Normal' || vim.mode == 'Visual'"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen"
  },
  // Explorer navigation
  {
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "j",
    "command": "list.focusDown",
    "when": "listFocus && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "k",
    "command": "list.focusUp",
    "when": "listFocus && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "o",
    "command": "list.toggleExpand",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "l",
    "command": "list.select",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "h",
    "command": "workbench.files.action.collapseExplorerFolders",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+a",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+c",
    "command": "filesExplorer.copy",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "x",
    "command": "filesExplorer.cut",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  // GIT
  {
    "key": "ctrl+g",
    "command": "workbench.view.scm"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.view.scm"
  },
  {
    "key": "ctrl+g",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "view.workbench.scm.visible && sideBarFocus"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.action.toggleSidebarVisibility",
    "when": "view.workbench.scm.visible"
  },
  // QUICK OPEN (<leader>ff or ctrl + p)
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenNavigateNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenNavigatePrevious",
    "when": "inQuickOpen"
  },
  // EDITOR
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "sideBarFocus"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusSideBar",
    "when": "sideBarVisible && editorFocus && activeEditorGroupIndex == 1"
  },
  {
    "key": "alt+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "tab",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "shift+tab",
    "command": "selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusLeftGroup",
    "when": "editorTextFocus && multipleEditorGroups && activeEditorGroupIndex != 1 && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusRightGroup",
    "when": "editorTextFocus && multipleEditorGroups &&& activeEditorGroupIndex != 1 && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusAboveGroup",
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.focusBelowGroup",
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "shift+alt+k",
    "command": "editor.action.insertCursorAbove",
    "when": "editorTextFocus && vim.mode == 'Insert'"
  },
  {
    "key": "shift+alt+j",
    "command": "editor.action.insertCursorBelow",
    "when": "editorTextFocus && vim.mode == 'Insert'"
  },
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "q",
    "command": "closeReferenceSearch",
    "when": "referenceSearchVisible && !config.editor.stablePeek"
  },
  {
    "key": "q",
    "command": "closeMarkersNavigation",
    "when": "markersNavigationVisible && !config.editor.stablePeek"
  },
  // SEARCH (AND REPLACE)
  {
    "key": "ctrl+k",
    "command": "search.focus.previousInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
  },
  {
    "key": "ctrl+j",
    "command": "search.focus.nextInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
  },
  {
    "key": "ctrl+d",
    "command": "workbench.action.search.toggleQueryDetails",
    "when": "inSearchEditor || searchViewletFocus"
  },
  {
    "key": "ctrl+k",
    "command": "search.action.focusSearchFromResults",
    "when": "firstMatchFocus && searchViewletVisible"
  },
  {
    "key": "shift+r",
    "command": "search.action.replace",
    "when": "matchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "shift+r",
    "command": "search.action.replaceAllInFile",
    "when": "fileMatchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "ctrl+shift+a",
    "command": "search.action.replaceAll",
    "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
  },
  // EDITOR SEARCH (AND REPLACE)
  {
    "key": "ctrl+k",
    "command": "editor.action.previousMatchFindAction",
    "when": "editorFocus && findInputFocussed"
  },
  {
    "key": "ctrl+j",
    "command": "editor.action.nextMatchFindAction",
    "when": "editorFocus && findInputFocussed"
  },
  {
    "key": "enter",
    "command": "editor.action.replaceAll",
    "when": "editorFocus && findWidgetVisible && replaceInputFocussed"
  },
  {
    "key": "enter",
    "command": "-editor.action.nextMatchFindAction",
    "when": "editorFocus && findInputFocussed"
  },
  {
    "key": "shift+enter",
    "command": "-editor.action.previousMatchFindAction",
    "when": "editorFocus && findInputFocussed"
  },
  {
    "key": "ctrl+c",
    "command": "closeFindWidget",
    "when": "editorFocus && findWidgetVisible && !isComposing"
  },
  // MARKERS (PROBLEMS) 
  {
    "key": "ctrl+k",
    "command": "editor.action.marker.prev",
    "when": "markersNavigationVisible && !config.editor.stablePeek"
  },
  {
    "key": "ctrl+j",
    "command": "editor.action.marker.next",
    "when": "markersNavigationVisible && !config.editor.stablePeek"
  },
  {
    "key": "ctrl+k",
    "command": "list.focusUp",
    "when": "focusedView == 'workbench.panel.markers.view'"
  },
  {
    "key": "ctrl+j",
    "command": "list.focusDown",
    "when": "focusedView == 'workbench.panel.markers.view'"
  },
  {
    "key": "ctrl+j",
    "command": "problems.action.focusProblemsFromFilter",
    "when": "problemsFilterFocus"
  },
  {
    "key": "ctrl+c",
    "command": "workbench.action.closePanel",
    "when": "focusedView == 'workbench.panel.markers.view'"
  },
  // TERMINAL
  {
    "key": "alt+i",
    "command": "workbench.action.terminal.toggleTerminal",
  },
  {
    "key": "alt+o",
    "command": "workbench.action.terminal.splitInActiveWorkspace",
    "when": "terminal.active"
  },
  {
    "key": "alt+p",
    "command": "workbench.action.terminal.kill",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  // VIM
  {
    "key": "alt+\\",
    "command": "toggleVim"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "ctrl+alt+i",
    "command": "toggleSuggestionFocus",
    "when": "suggestWidgetVisible && textInputFocus"
  }
]